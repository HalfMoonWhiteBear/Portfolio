import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.util.ArrayList;

import javax.swing.ImageIcon;

public class Game extends Thread {
	//노트 판정 라인
	private Image judgementLineImage = new ImageIcon(Main.class.getResource("./images/judgementLine.png")).getImage();	
	//게임 정보
	private Image gameInfoImage = new ImageIcon(Main.class.getResource("./images/gameInfo.png")).getImage();
	//노트 경로 이미지
	private Image noteRouteDImage = new ImageIcon(Main.class.getResource("./images/noteRoute.png")).getImage();	
	private Image noteRouteFImage = new ImageIcon(Main.class.getResource("./images/noteRoute.png")).getImage();	
	private Image noteRouteJImage = new ImageIcon(Main.class.getResource("./images/noteRoute.png")).getImage();	
	private Image noteRouteKImage = new ImageIcon(Main.class.getResource("./images/noteRoute.png")).getImage();		
		
	//키 이미지
	private Image dKeyImage = new ImageIcon(Main.class.getResource("./images/dKey.png")).getImage();
	private Image fKeyImage = new ImageIcon(Main.class.getResource("./images/fKey.png")).getImage();
	private Image jKeyImage = new ImageIcon(Main.class.getResource("./images/jKey.png")).getImage();
	private Image kKeyImage = new ImageIcon(Main.class.getResource("./images/kKey.png")).getImage();
		
	private String titleName;
	private String musicTitle;
	private Music gameMusic;
	
	ArrayList<Note> noteList = new ArrayList<Note>();
	
	public Game(String titleName, String musicTitle) {
		this.titleName = titleName;
		this.musicTitle = musicTitle;
		gameMusic = new Music(BeatGame.Title[BeatGame.cnt], this.musicTitle, false);
	}
		
	public void screenDraw(Graphics2D g) {
		g.drawImage(noteRouteDImage, 200, 30, null);
		g.drawImage(noteRouteFImage, 270, 30, null);
		g.drawImage(noteRouteJImage, 340, 30, null);
		g.drawImage(noteRouteKImage, 410, 30, null);
		g.drawImage(gameInfoImage, 980, 30, null);
		g.drawImage(judgementLineImage, 200, 580, null);
		for(int i = 0; i < noteList.size(); i++)
		{
			Note note = noteList.get(i);
			note.screenDraw(g);
		}
		g.drawImage(dKeyImage, 200, 605, null);
		g.drawImage(fKeyImage, 270, 605, null);
		g.drawImage(jKeyImage, 340, 605, null);
		g.drawImage(kKeyImage, 410, 605, null);
		g.setColor(Color.white);
		((Graphics2D) g).setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
		g.setFont(new Font("HCR Dotum", Font.BOLD, 100));
		g.drawString("000000", 930, 110);
	}
	
	public void pressD() {
		noteRouteDImage = new ImageIcon(Main.class.getResource("./images/noteRoutePressed.png")).getImage();
		new Music("main_music","hitnormal.mp3", false).start();
	}
	public void releaseD() {
		noteRouteDImage = new ImageIcon(Main.class.getResource("./images/noteRoute.png")).getImage();
	}
	public void pressF() {
		noteRouteFImage = new ImageIcon(Main.class.getResource("./images/noteRoutePressed.png")).getImage();
		new Music("main_music","hitnormal.mp3", false).start();
	}
	public void releaseF() {
		noteRouteFImage = new ImageIcon(Main.class.getResource("./images/noteRoute.png")).getImage();
	}
	public void pressJ() {
		noteRouteJImage = new ImageIcon(Main.class.getResource("./images/noteRoutePressed.png")).getImage();
		new Music("main_music","hitnormal.mp3", false).start();
	}
	public void releaseJ() {
		noteRouteJImage = new ImageIcon(Main.class.getResource("./images/noteRoute.png")).getImage();
	}
	public void pressK() {
		noteRouteKImage = new ImageIcon(Main.class.getResource("./images/noteRoutePressed.png")).getImage();
		new Music("main_music","hitnormal.mp3", false).start();
	}
	public void releaseK() {
		noteRouteKImage = new ImageIcon(Main.class.getResource("./images/noteRoute.png")).getImage();
	}
	
	@Override
	public void run() {
		dropNotes();
	}
	
	public void close() {
		gameMusic.close();
		this.interrupt();
	}
	
	public void dropNotes() {
		Beat[] beats = null;
		if(titleName.equals("Faded")) {
			int startTime = 1000 - Main.REACH_TIME * 1000;
			
			beats = new Beat[] {
					new Beat(startTime, "D"),
			};
 		}
		else if(titleName.equals("Blue Zenith")) {
			int startTime = 1000 - Main.REACH_TIME * 1000;
			beats = new Beat[] {
					new Beat(startTime, "D"),
			};
		}
		else if(titleName.equals("Flower Dance")) {
			int startTime = 24497;
			int gap = 150;
			beats = new Beat[] {
					new Beat(startTime + (gap * 0), "K"), //26.597
					new Beat(startTime + gap * 2, "D"),
					new Beat(startTime + gap * 5, "F"),
					new Beat(startTime + gap * 6, "J"),
					new Beat(startTime + gap * 7, "K"),
					new Beat(startTime + gap * 9, "D"),
					new Beat(startTime + gap * 11, "F"),
					new Beat(startTime + gap * 13, "K"),
					new Beat(startTime + gap * 17, "J"),
					new Beat(startTime + gap * 20, "F"),
					new Beat(startTime + gap * 21, "K"),
					new Beat(startTime + gap * 23, "J"),
					new Beat(startTime + gap * 24, "D"),
					new Beat(startTime + gap * 26, "F"),
					new Beat(startTime + gap * 28, "K"),
					new Beat(startTime + gap * 30, "J"),
					new Beat(startTime + gap * 32, "D"), //31.397
					new Beat(startTime + gap * 34, "F"),
					new Beat(startTime + gap * 36, "K"),
					new Beat(startTime + gap * 38, "D"),
					new Beat(startTime + gap * 40, "F"),
					new Beat(startTime + gap * 42, "J"),
					new Beat(startTime + gap * 44, "D"),
					new Beat(startTime + gap * 46, "K"),
					new Beat(startTime + gap * 48, "F"),
					new Beat(startTime + gap * 50, "D"),
					new Beat(startTime + gap * 52, "F"),
					new Beat(startTime + gap * 54, "J"),
					new Beat(startTime + gap * 56, "K"),
					new Beat(startTime + gap * 58, "D"),
					new Beat(startTime + gap * 60, "F"),
					new Beat(startTime + gap * 62, "K"),
					new Beat(startTime + gap * 64, "K"),
					new Beat(startTime + gap * 66, "D"),
					new Beat(startTime + gap * 69, "F"),
					new Beat(startTime + gap * 70, "J"),
					new Beat(startTime + gap * 71, "K"),
					new Beat(startTime + gap * 72, "D"),
					new Beat(startTime + gap * 74, "F"),
					new Beat(startTime + gap * 76, "K"),
					new Beat(startTime + gap * 80, "D"),
					new Beat(startTime + gap * 82, "F"),
					new Beat(startTime + gap * 84, "J"),
					new Beat(startTime + gap * 86, "D"),
					new Beat(startTime + gap * 88, "K"),
					new Beat(startTime + gap * 90, "J"),
					new Beat(startTime + gap * 92, "F"),
					new Beat(startTime + gap * 94, "D"), //40.697
					new Beat(startTime + gap * 96, "K"),
					new Beat(startTime + gap * 98, "F"),
					new Beat(startTime + gap * 100, "J"),
					new Beat(startTime + gap * 104, "D"),
					new Beat(startTime + gap * 106, "J"),
					new Beat(startTime + gap * 108, "F"),
					new Beat(startTime + gap * 112, "D"),
					new Beat(startTime + gap * 114, "F"),
					new Beat(startTime + gap * 116, "J"),
					new Beat(startTime + gap * 118, "D"),
					new Beat(startTime + gap * 120, "K"),
					new Beat(startTime + gap * 122, "F"),
					new Beat(startTime + gap * 124, "J"),
					new Beat(startTime + gap * 124, "K"),
					new Beat(startTime + gap * 126, "F"),
					new Beat(startTime + gap * 128, "D"),
					new Beat(startTime + gap * 128, "K"),
					new Beat(startTime + gap * 130, "J"),
					new Beat(startTime + gap * 132, "D"),
					new Beat(startTime + gap * 132, "F"),
					new Beat(startTime + gap * 134, "K"),
					new Beat(startTime + gap * 136, "D"),
					new Beat(startTime + gap * 138, "F"),
					new Beat(startTime + gap * 140, "J"),
					new Beat(startTime + gap * 140, "K"),
					new Beat(startTime + gap * 142, "F"),
					new Beat(startTime + gap * 144, "K"),
					new Beat(startTime + gap * 146, "J"),
					new Beat(startTime + gap * 148, "D"),
					new Beat(startTime + gap * 148, "F"),
					new Beat(startTime + gap * 150, "K"),
					new Beat(startTime + gap * 152, "F"),
					new Beat(startTime + gap * 154, "J"),
					new Beat(startTime + gap * 156, "D"),
					new Beat(startTime + gap * 156, "K"),
					new Beat(startTime + gap * 158, "F"),
					new Beat(startTime + gap * 160, "J"),
					new Beat(startTime + gap * 162, "D"),
					new Beat(startTime + gap * 164, "J"),
					new Beat(startTime + gap * 164, "K"), //51.197
					new Beat(startTime + gap * 166, "F"),
					new Beat(startTime + gap * 168, "D"),
					new Beat(startTime + gap * 170, "K"),
					new Beat(startTime + gap * 172, "D"),
					new Beat(startTime + gap * 172, "F"),
					new Beat(startTime + gap * 174, "J"),
					new Beat(startTime + gap * 176, "D"),
					new Beat(startTime + gap * 178, "F"),
					new Beat(startTime + gap * 180, "J"),
					new Beat(startTime + gap * 180, "K"),
					new Beat(startTime + gap * 182, "D"),
					new Beat(startTime + gap * 184, "J"),
					new Beat(startTime + gap * 186, "F"),
					new Beat(startTime + gap * 188, "D"),
					new Beat(startTime + gap * 188, "K"), //54.797
					new Beat(startTime + gap * 190, "F"),
					new Beat(startTime + gap * 192, "J"),
					new Beat(startTime + gap * 194, "D"),
					new Beat(startTime + gap * 196, "F"),
					new Beat(startTime + gap * 196, "K"),
					new Beat(startTime + gap * 198, "J"),
					new Beat(startTime + gap * 200, "D"),
					new Beat(startTime + gap * 202, "F"),
					new Beat(startTime + gap * 204, "J"),
					new Beat(startTime + gap * 204, "K"),
					new Beat(startTime + gap * 206, "D"),
					new Beat(startTime + gap * 208, "K"),
					new Beat(startTime + gap * 210, "F"),
					new Beat(startTime + gap * 212, "D"),
					new Beat(startTime + gap * 212, "J"),
					new Beat(startTime + gap * 214, "F"),
					new Beat(startTime + gap * 216, "K"),
					new Beat(startTime + gap * 218, "J"),
					new Beat(startTime + gap * 220, "D"),
					new Beat(startTime + gap * 220, "F"),
					new Beat(startTime + gap * 222, "K"),
					new Beat(startTime + gap * 224, "F"),
					new Beat(startTime + gap * 226, "J"),
					new Beat(startTime + gap * 228, "D"),
					new Beat(startTime + gap * 228, "K"),
					new Beat(startTime + gap * 230, "F"),
					new Beat(startTime + gap * 232, "J"),
					new Beat(startTime + gap * 234, "F"),
					new Beat(startTime + gap * 236, "D"),
					new Beat(startTime + gap * 236, "K"),
					new Beat(startTime + gap * 238, "J"),
					new Beat(startTime + gap * 240, "F"), //60.497
					new Beat(startTime + gap * 242, "D"),
					new Beat(startTime + gap * 242, "K"),
					new Beat(startTime + gap * 244, "F"),
					new Beat(startTime + gap * 246, "J"),
					new Beat(startTime + gap * 248, "F"),
					new Beat(startTime + gap * 250, "D"),
					new Beat(startTime + gap * 250, "K"),
					new Beat(startTime + gap * 252, "J"),
					new Beat(startTime + gap * 254, "F"),
					new Beat(startTime + gap * 256, "K"),
					new Beat(startTime + gap * 258, "D"),
					new Beat(startTime + gap * 258, "F"),
					new Beat(startTime + gap * 260, "K"),
					new Beat(startTime + gap * 262, "F"),
					new Beat(startTime + gap * 264, "J"),
					new Beat(startTime + gap * 266, "D"),
					new Beat(startTime + gap * 266, "K"),
					new Beat(startTime + gap * 266, "K"),
					new Beat(startTime + gap * 268, "F"),
					new Beat(startTime + gap * 270, "K"), //64.997
					new Beat(startTime + gap * 272, "J"),
					new Beat(startTime + gap * 274, "D"),
					new Beat(startTime + gap * 274, "F"),
					new Beat(startTime + gap * 275, "K"),
					new Beat(startTime + gap * 276, "J"),
					new Beat(startTime + gap * 277, "F"),
					new Beat(startTime + gap * 278, "D"),
					new Beat(startTime + gap * 280, "F"),
					new Beat(startTime + gap * 282, "J"),
					new Beat(startTime + gap * 282, "K"),
					new Beat(startTime + gap * 286, "D"),
					new Beat(startTime + gap * 289, "F"),
					new Beat(startTime + gap * 290, "K"),
					new Beat(startTime + gap * 293, "J"),
					new Beat(startTime + gap * 294, "D"),
					new Beat(startTime + gap * 298, "J"),
					new Beat(startTime + gap * 298, "K"),
					new Beat(startTime + gap * 302, "D"),
					new Beat(startTime + gap * 306, "J"),
					new Beat(startTime + gap * 306, "K"),
					new Beat(startTime + gap * 310, "D"),
					new Beat(startTime + gap * 312, "K"),
					new Beat(startTime + gap * 314, "D"),
					new Beat(startTime + gap * 314, "F"), //71.597
					new Beat(startTime + gap * 316, "J"),
					new Beat(startTime + gap * 318, "F"),
					new Beat(startTime + gap * 320, "J"),
					new Beat(startTime + gap * 322, "D"),
					new Beat(startTime + gap * 322, "K"),
					new Beat(startTime + gap * 324, "F"),
					new Beat(startTime + gap * 326, "J"),
					new Beat(startTime + gap * 328, "D"),
					new Beat(startTime + gap * 330, "J"),
					new Beat(startTime + gap * 330, "K"),
					new Beat(startTime + gap * 332, "F"),
					new Beat(startTime + gap * 333, "J"),
					new Beat(startTime + gap * 334, "D"),
					new Beat(startTime + gap * 336, "F"),
					new Beat(startTime + gap * 338, "J"),
					new Beat(startTime + gap * 338, "K"),
					new Beat(startTime + gap * 339, "D"), //1:15:347
					new Beat(startTime + gap * 340, "F"),
					new Beat(startTime + gap * 341, "J"),
					new Beat(startTime + gap * 342, "K"),
					new Beat(startTime + gap * 344, "F"),
					new Beat(startTime + gap * 346, "D"),
					new Beat(startTime + gap * 346, "J"),
					new Beat(startTime + gap * 350, "K"),
					new Beat(startTime + gap * 352, "F"), //1.17.297
					new Beat(startTime + gap * 354, "J"),
					new Beat(startTime + gap * 354, "K"),
					new Beat(startTime + gap * 356, "D"),
					new Beat(startTime + gap * 358, "K"),
					new Beat(startTime + gap * 360, "J"),
					new Beat(startTime + gap * 362, "F"),
					new Beat(startTime + gap * 362, "K"),
					new Beat(startTime + gap * 364, "D"),
					new Beat(startTime + gap * 366, "J"),
					new Beat(startTime + gap * 368, "K"),
					new Beat(startTime + gap * 370, "D"),
					new Beat(startTime + gap * 370, "F"),
					new Beat(startTime + gap * 374, "F"),
					new Beat(startTime + gap * 376, "D"), //1.20.897
					new Beat(startTime + gap * 378, "J"),
					new Beat(startTime + gap * 378, "K"),
					new Beat(startTime + gap * 382, "F"),
					new Beat(startTime + gap * 384, "J"),
					new Beat(startTime + gap * 386, "D"),
					new Beat(startTime + gap * 386, "K"),
					new Beat(startTime + gap * 388, "J"),
					new Beat(startTime + gap * 390, "F"),
					new Beat(startTime + gap * 392, "J"),
					new Beat(startTime + gap * 394, "D"),
					new Beat(startTime + gap * 394, "K"),
					new Beat(startTime + gap * 398, "J"),
					new Beat(startTime + gap * 400, "F"), //1.24.497
					new Beat(startTime + gap * 402, "J"),
					new Beat(startTime + gap * 402, "K"),
					new Beat(startTime + gap * 403, "D"),
					new Beat(startTime + gap * 404, "F"),
					new Beat(startTime + gap * 405, "K"),
					new Beat(startTime + gap * 406, "F"),
					new Beat(startTime + gap * 408, "J"),
					new Beat(startTime + gap * 410, "D"),
					new Beat(startTime + gap * 410, "K"), //1.25.997
			};
		}
		int i = 0;
		gameMusic.start();
		while(i < beats.length && !isInterrupted()) {
			boolean dropped = false;
			if(beats[i].getTime() <= gameMusic.getTime()) {
				Note note = new Note(beats[i].getNoteName());
				note.start();
				noteList.add(note);
				i++;
				dropped = true;
			}
			if(!dropped) {
				try {
					Thread.sleep(5);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}
	}
}
